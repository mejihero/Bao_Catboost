importpandasaspd,numpyasnp,time

fromsklearn.model_selectionimporttrain_test_split

data=pd.read_csv("flights.csv")

data=data.sample(frac=0.1,random_state=10)

data=data]

data.dropna(inplace=True)

data=(data>10)*1

cols=

foritemincols:

data=data.astype("category").cat.codes+1

train,test,y_train,y_test=train_test_split(data.drop(,axis=1),data,

random_state=10,test_size=0.25)

defauc(m,train,test):

return(metrics.roc_auc_score(y_train,m.predict_proba(train)),

metrics.roc_auc_score(y_test,m.predict_proba(test)))

#ParameterTuning

model=xgb.XGBClassifier()

param_dist={"max_depth":,

"min_child_weight":,

"n_estimators":,

"learning_rate":,}

grid_search=GridSearchCV(model,param_grid=param_dist,cv=3,

verbose=10,n_jobs=-1)

grid_search.fit(train,y_train)

grid_search.best_estimator_

model=xgb.XGBClassifier(max_depth=50,min_child_weight=1,n_estimators=200,

n_jobs=-1,verbose=1,learning_rate=0.16)

model.fit(train,y_train)

auc(model,train,test)

defauc2(m,train,test):

return(metrics.roc_auc_score(y_train,m.predict(train)),

metrics.roc_auc_score(y_test,m.predict(test)))

lg=lgb.LGBMClassifier(silent=False)

param_dist={"max_depth":,

"learning_rate":,

"num_leaves":,

"n_estimators":

}

grid_search=GridSearchCV(lg,n_jobs=-1,param_grid=param_dist,cv=3,scoring="roc_auc",verbose=5)

grid_search.fit(train,y_train)

grid_search.best_estimator_

d_train=lgb.Dataset(train,label=y_train)

params={"max_depth":50,"learning_rate":0.1,"num_leaves":900,"n_estimators":300}

#WithoutCategoricalFeatures

model2=lgb.train(params,d_train)

auc2(model2,train,test)

#WithCatgeoricalFeatures

cate_features_name=

model2=lgb.train(params,d_train,categorical_feature=cate_features_name)

auc2(model2,train,test)

??CatBoost???,??????????????,???????????????????,????????:????????,??????????????????,?????????????

cat_features_index=

defauc(m,train,test):

return(metrics.roc_auc_score(y_train,m.predict_proba(train)),

metrics.roc_auc_score(y_test,m.predict_proba(test)))

params={'depth':,

'learning_rate':,

'l2_leaf_reg':,

'iterations':}

cb=cb.CatBoostClassifier()

cb_model=GridSearchCV(cb,params,scoring="roc_auc",cv=3)

cb_model.fit(train,y_train)

clf=cb.CatBoostClassifier(eval_metric="AUC",depth=10,iterations=500,l2_leaf_reg=9,learning_rate=0.15)

clf.fit(train,y_train)

auc(clf,train,test)

clf=cb.CatBoostClassifier(eval_metric="AUC",one_hot_max_size=31,

depth=10,iterations=500,l2_leaf_reg=9,learning_rate=0.15)

clf.fit(train,y_train,cat_features=cat_features_index)

auc(clf,train,test)